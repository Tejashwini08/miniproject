import os
import numpy as np
import matplotlib.pyplot as plt
import cv2
import random
import tensorflow as tf
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.models import load_model
from tensorflow.keras.applications.efficientnet import preprocess_input

# Define the class dictionary
class_dict = {0: 'glioma_tumor',
              1: 'meningioma_tumor',
              2: 'no_tumor',
              3: 'pituitary_tumor'}

# Function to load and preprocess the image
def preprocess_image(image_path, target_size=(240, 240)):
    img = load_img(image_path, target_size=target_size)
    img_array = img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = preprocess_input(img_array)
    return img_array

# Function to load the model and make predictions
def predict_tumor(image_path, model_path='model.h5'):
    # Load the trained model
    model = load_model(model_path)
    
    # Preprocess the image
    preprocessed_image = preprocess_image(image_path)
    
    # Make predictions
    predictions = model.predict(preprocessed_image)
    predicted_class = np.argmax(predictions, axis=1)[0]
    
    # Get the class name
    class_name = class_dict[predicted_class]
    return class_name

# Function to display the image and prediction
def display_prediction(image_path, prediction):
    img = load_img(image_path)
    plt.imshow(img)
    plt.title(f"Prediction: {prediction}")
    plt.axis('off')
    plt.show()

# Example usage
image_path = '/path/to/your/image.jpg'  # Replace with the path to your image
model_path = 'model.h5'  # Replace with the path to your model

# Predict the class of the tumor in the image
prediction = predict_tumor(image_path, model_path)

# Display the image and prediction
display_prediction(image_path, prediction)
